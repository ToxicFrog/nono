TODO (in approximate priority order)
- key mappings for basic play
- load JSON puzzles including those that consist only of hints
- downloader of puzzles from nonograms.org
- bundle puzzles in jar and load them?
- more key mappings?

There's a nonograms.org downloader at
https://github.com/ThomasR/nonogram-solver/tree/develop/puzzles/nonograms.org

## Graphics

All cells are doubled, i.e. one nonogram cell is 2em wide.

Filled: "██"
Maybe: "╺╸" or "╶╴" or "░░"
Empty: "  " or "[]" or "⌜⌟" or (with underline) "▏▕" or "··"

vvvvvvvvvvvv
▏⌟^^
vvvvvvvvvvvv
[]⟔⟓⎡⎦⌜⌟

## Functional requirements

Proposed hotkeys:
 space: fill
 x: clear
 z: unknown
 -\=: clear unknowns in row/col/both
 _|+: fill unknowns in row/col/both
 c: check solution (c twice to display which tiles are wrong?)
 h: display hint (pick a ??? tile at random and show its true state)
 q: quit
 l: load a new puzzle
 s: save the puzzle in progress

Nice to have: puzzle selection screen in game
Nice to have: save puzzle state/remember which ones you've solved

Nice to have: dim out hintlines once satisfied.

Nice to have: dim out individual hints once satisfied.

Nice to have: once all hints for a row/col are satisfied, mark other cells in that line empty.

## Lanterna

Terminal: lowest-level interface, basically a vt220
Screen: layer on top of terminal, basically a framebuffer
  set cell
  clear
  refresh
  readInput/pollInput
  doResizeIfNecessary should be called at the start of each drawing pass to handle SIGWINCH events
TextGraphics: layer on top of screen, convenience functions for drawing strings, shapes, setting default colours, etc.
MultiWindowTextGUI: the only concrete GUI implementation, runs on top of Screen (automatically grabs the TextGraphics and stuff).
Window: the basic element of the MWTGUI. Window layout is handled by the WM in the MWTGUI; the window can have hints attached to it to modify this behaviour. By default there's no bindings for focus switching, and all windows are modal; you create one and then call window.waitUntilClosed() to block until it goes away.
A window can only contain one widget. Typically this is a Panel, which has a layout manager and lets you put multiple other components into it.
